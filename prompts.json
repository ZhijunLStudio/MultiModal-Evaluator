{
    "prompt1": "Graph Connection Relationship Standardization Guide\nBackground and Objective\nYou need to convert various types of diagram descriptions (including system block diagrams, basic circuit diagrams, flowcharts, digital logic circuit diagrams, and general circuit diagrams) into a standardized connection relationship representation format. This will help establish a unified method for representing connections, enabling models to learn a broader paradigm of connection relationships.\nInput Requirements\nPlease provide the diagram description you want to convert, which can be a textual description or an explanation of an existing diagram.\nOutput Format\nPlease convert your diagram description according to the following standard format:\nmaingraph [GraphName1]\n    [ComponentA] --> [ComponentB]\n    [ComponentC] -- [ComponentD]\n    [ComponentE] <--> [ComponentF]\n    [ComponentG] --> [ComponentH][\"label\"=\"ConnectionLabel\"]\n    subgraph [SubgraphName1]\n        [ComponentI] --> [ComponentJ]\n        [ComponentK] --> [ComponentL]\n    end\n    subgraph [SubgraphName2]\n        [ComponentM] --> [ComponentN]\n    end\nmaingraph [GraphName2]\n    [ComponentO] --> [ComponentP]\n    [ComponentQ] --> [ComponentR]\nHierarchical_Relationship\n    [GraphName1] --> [GraphName2]\n    [ComponentA] --> [GraphName2]\n    [SubgraphName1] --> [GraphName2]\n\nSeries_Simplification\n    [Text description of omitted series connections]\n\nParallel_Simplification\n    [Text description of omitted parallel connections]\n\nFormat Explanation\n1. Connection Representation:\n   1. Single arrow (directed connection): -->\n   2. No arrow (undirected connection): --\n   3. Double arrow (bidirectional connection): <-->\n   4. Labeled connection: [ComponentA] --> [ComponentB][\"label\"=\"ConnectionLabelText\"]\n2. Graph Hierarchy Structure:\n   1. maingraph: Represents an independent connection relationship diagram\n   2. subgraph: Represents a submodule within a maingraph, using indentation to show hierarchical relationships\n   3. All subgraphs must end with the end keyword\n3. Relationship Descriptions:\n   1. Hierarchical_Relationship: Describes all parent-child relationships\n   2. Series_Simplification: Describes all omitted series connections\n   3. Parallel_Simplification: Describes all omitted parallel connections\n\nSimplification Rules\n1. Series Simplification:\n   1. First, list all visible connection relationships in the diagram\n   2. Then, use natural language to describe the omitted elements and the number of omissions\n2. Parallel Simplification:\n   1. First, list all visible connection relationships in the diagram\n   2. Then, use natural language to describe the omitted elements and the number of omissions\n\nExample\nIf you have the following description: \"The voltage controller output connects to the current converter, which then connects to the comparator and control unit with a feedback label\"\nIt should be converted to:\n\nmaingraph VoltageControlSystem\n    Voltage_Controller --> Current_Converter\n    Current_Converter --> Comparator\n    Current_Converter --> Control_Unit[\"label\"=\"feedback\"]\n\nPlease standardize your diagram connection relationships according to the above format.",
    
    "prompt2": "Describe the compltet connections layout of this network diagram.",
    
    "prompt3": "Identify all network connections shown in this diagram and convert them to the standardized format. Use the appropriate arrow type for each connection:\n- Single arrow (-->) for directed connections\n- No arrow (--) for undirected connections\n- Double arrow (<-->) for bidirectional connections\n\nFor connections with labels, use the format: [ComponentA] --> [ComponentB][\"label\"=\"ConnectionLabelText\"]",
    
    "prompt4": "Please extract and structure all connection relationships from this diagram. Begin with 'maingraph' and list all connections using the appropriate symbols:\n- --> for directed connections\n- -- for undirected connections\n- <--> for bidirectional connections\n\nIf a connection has a label, represent it as: [Component1] --> [Component2][\"label\"=\"label_text\"]",

    "prompt5": "Break down the connection dynamics shown in the diagram using Graphviz to describe it. Identify the hierarchical layers and use ellipses for expressing any simplified series or parallel connections, marking them as Hierarchical_Relationship, Series_Simplification, and Parallel_Simplification, with explanations in simple language. ",

    "prompt6": "Deconstruct the connection patterns in the visual and outline them using Graphviz commands. Highlight hierarchical links and employ ellipses to signal simplified sequences. Categorize these as Hierarchical_Relationship, Series_Simplification, or Parallel_Simplification, adding clear descriptions for the simplifications. ",
    
    "grading_prompt_en": "# Graph Node and Connection Grading Standard\n\n## Grading Task\nAs a professional evaluator, assess how well the generated graph's nodes, connections, and arrow directions match the reference answer. Provide a score from 0-100 and briefly explain your reasoning. Focus solely on the presence and accuracy of nodes, connections, and their directions. Ignore formatting aspects.\n\n## Grading Criteria\n1.  **Node and Connection Completeness (50 points)**\n    * Does the generated output include all nodes present in the reference answer?\n    * Does the generated output include all connections (edges) between the correct nodes as shown in the reference answer?\n\n2.  **Node Identity and Connection Direction Accuracy (50 points)**\n    * Are the names or identifiers of all nodes accurate compared to the reference answer?\n    * Are the directions of all connections (e.g., A --> B, B <-- A, A <--> B, or an undirected link if specified in reference) accurately represented as per the reference answer?\n\n## Scoring Guide\n- 90-100: All nodes and connections are present with perfectly accurate names/identifiers and directions.\n- 80-89: Contains most nodes and connections with largely accurate names/identifiers and directions; minor omissions or inaccuracies.\n- 70-79: Contains a significant portion of nodes and connections, but with notable omissions, incorrect node names/identifiers, or erroneous connection directions.\n- 60-69: The basic set of nodes and connections is partially recognizable, but with significant missing elements or inaccuracies in names/identifiers or directions.\n- 0-59: Severely deviates from the reference answer in terms of nodes, connections, or their directions; substantial information is missing or incorrect.\n\nPlease first analyze the differences between the generated answer and reference answer, then provide your score and brief justification.\n\nYour output format should be:\nScore: [0-100]\nReason: [brief explanation]",


    "grading_prompt_zh": "# 图节点与连接关系评分标准\n\n## 评分任务\n请您作为专业评估者，评估生成的图中的节点、连接关系以及箭头方向与参考答案的匹配程度。请给出0-100分的评分，并简要解释理由。请仅关注节点、连接及其方向的存在性和准确性，忽略格式方面的问题。\n\n## 评分标准\n1.  **节点与连接完整性 (50分)**\n    * 生成的输出是否包含了参考答案中的所有节点？\n    * 生成的输出是否包含了参考答案中所示的、连接正确节点间的所有连接关系（边）？\n\n2.  **节点识别与连接方向准确性 (50分)**\n    * 所有节点的名称或标识符是否与参考答案相比准确无误？\n    * 所有连接的方向（例如 A --> B、B <-- A、A <--> B，或参考答案中指定的无向连接）是否与参考答案一致且准确表示？\n\n## 评分说明\n- 90-100分：所有节点和连接均存在，且名称/标识符和方向完全准确。\n- 80-89分：包含大部分节点和连接，名称/标识符和方向基本准确；存在少量遗漏或不准确之处。\n- 70-79分：包含较多节点和连接，但在节点名称/标识符、缺失元素或连接方向方面存在明显错误。\n- 60-69分：基本节点和连接部分可识别，但在名称/标识符或方向上存在严重缺失或不准确。\n- 0-59分：在节点、连接或其方向方面与参考答案严重不符；大量信息缺失或不正确。\n\n请先分析生成答案与参考答案的差异，然后给出评分和简短理由。\n\n您的评分输出格式应为：\n分数：[0-100]\n理由：[简要说明]"

  }
  